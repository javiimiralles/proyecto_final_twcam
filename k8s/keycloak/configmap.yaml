apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-config
data:
  realm-export.json: |
    {
      "id": "7bc290b6-8d0f-4807-b699-dfe3872974a3",
      "realm": "final-twcam",
      "notBefore": 0,
      "defaultSignatureAlgorithm": "RS256",
      "revokeRefreshToken": false,
      "refreshTokenMaxReuse": 0,
      "accessTokenLifespan": 31536000,
      "accessTokenLifespanForImplicitFlow": 31536000,
      "ssoSessionIdleTimeout": 31536000,
      "ssoSessionMaxLifespan": 31536000,
      "ssoSessionIdleTimeoutRememberMe": 0,
      "ssoSessionMaxLifespanRememberMe": 0,
      "offlineSessionIdleTimeout": 31536000,
      "offlineSessionMaxLifespanEnabled": false,
      "offlineSessionMaxLifespan": 5184000,
      "clientSessionIdleTimeout": 31536000,
      "clientSessionMaxLifespan": 31536000,
      "clientOfflineSessionIdleTimeout": 0,
      "clientOfflineSessionMaxLifespan": 0,
      "accessCodeLifespan": 60,
      "accessCodeLifespanUserAction": 300,
      "accessCodeLifespanLogin": 1800,
      "actionTokenGeneratedByAdminLifespan": 43200,
      "actionTokenGeneratedByUserLifespan": 300,
      "oauth2DeviceCodeLifespan": 600,
      "oauth2DevicePollingInterval": 5,
      "enabled": true,
      "sslRequired": "external",
      "registrationAllowed": false,
      "registrationEmailAsUsername": false,
      "rememberMe": false,
      "verifyEmail": false,
      "loginWithEmailAllowed": true,
      "duplicateEmailsAllowed": false,
      "resetPasswordAllowed": false,
      "editUsernameAllowed": false,
      "bruteForceProtected": false,
      "permanentLockout": false,
      "maxTemporaryLockouts": 0,
      "bruteForceStrategy": "MULTIPLE",
      "maxFailureWaitSeconds": 900,
      "minimumQuickLoginWaitSeconds": 60,
      "waitIncrementSeconds": 60,
      "quickLoginCheckMilliSeconds": 1000,
      "maxDeltaTimeSeconds": 43200,
      "failureFactor": 30,
      "roles": {
        "realm": [
          {
            "id": "41784e0e-ace3-4818-9f3f-4d837b449691",
            "name": "default-roles-final-twcam",
            "description": "${role_default-roles}",
            "composite": true,
            "composites": {
              "realm": [
                "offline_access",
                "uma_authorization"
              ],
              "client": {
                "account": [
                  "view-profile",
                  "manage-account"
                ]
              }
            },
            "clientRole": false,
            "containerId": "7bc290b6-8d0f-4807-b699-dfe3872974a3",
            "attributes": {}
          },
          {
            "id": "576f55df-2642-4ff2-9637-d33ea7334f31",
            "name": "offline_access",
            "description": "${role_offline-access}",
            "composite": false,
            "clientRole": false,
            "containerId": "7bc290b6-8d0f-4807-b699-dfe3872974a3",
            "attributes": {}
          },
          {
            "id": "741bd7d2-3ae8-40b4-b159-504927807e00",
            "name": "uma_authorization",
            "description": "${role_uma_authorization}",
            "composite": false,
            "clientRole": false,
            "containerId": "7bc290b6-8d0f-4807-b699-dfe3872974a3",
            "attributes": {}
          }
        ],
        "client": {
          "admin-client": [
            {
              "id": "8702eb41-71f2-4ebf-b42a-4970fc110fb5",
              "name": "uma_protection",
              "composite": false,
              "clientRole": true,
              "containerId": "9a11796b-6aba-45e4-bdb5-e865bae0f8d5",
              "attributes": {}
            }
          ],
          "estacion-client": [
            {
              "id": "5891dcf9-1953-46ef-ba96-d8cb5349d739",
              "name": "uma_protection",
              "composite": false,
              "clientRole": true,
              "containerId": "2d776362-05d6-4b6f-bbba-d6c16e6d68b8",
              "attributes": {}
            }
          ],
          "realm-management": [
            {
              "id": "ef83f0ce-ca55-41f9-bc36-62c0480f49e5",
              "name": "manage-authorization",
              "description": "${role_manage-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "72a9bdb1-0d7d-4948-8e8b-1abbab7101d9",
              "attributes": {}
            },
            {
              "id": "9cb52a4d-f570-4e5b-808f-b1dd5a224b96",
              "name": "create-client",
              "description": "${role_create-client}",
              "composite": false,
              "clientRole": true,
              "containerId": "72a9bdb1-0d7d-4948-8e8b-1abbab7101d9",
              "attributes": {}
            },
            {
              "id": "73311828-57ca-4695-a8f9-cfec4968a337",
              "name": "view-identity-providers",
              "description": "${role_view-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "72a9bdb1-0d7d-4948-8e8b-1abbab7101d9",
              "attributes": {}
            },
            {
              "id": "5f0ecc35-ff6c-49d4-adce-be44a1ae2f67",
              "name": "manage-clients",
              "description": "${role_manage-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "72a9bdb1-0d7d-4948-8e8b-1abbab7101d9",
              "attributes": {}
            },
            {
              "id": "43935874-b84c-48fa-849a-486bd3c815ad",
              "name": "manage-identity-providers",
              "description": "${role_manage-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "72a9bdb1-0d7d-4948-8e8b-1abbab7101d9",
              "attributes": {}
            },
            {
              "id": "4751db01-4a77-4e70-8d0e-020e86a0fd83",
              "name": "impersonation",
              "description": "${role_impersonation}",
              "composite": false,
              "clientRole": true,
              "containerId": "72a9bdb1-0d7d-4948-8e8b-1abbab7101d9",
              "attributes": {}
            },
            {
              "id": "1b66b48b-d554-475b-a7f3-357fd98cf763",
              "name": "realm-admin",
              "description": "${role_realm-admin}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "manage-authorization",
                    "view-identity-providers",
                    "create-client",
                    "manage-clients",
                    "manage-identity-providers",
                    "impersonation",
                    "view-authorization",
                    "view-clients",
                    "query-users",
                    "view-realm",
                    "manage-realm",
                    "query-clients",
                    "query-groups",
                    "view-users",
                    "manage-events",
                    "view-events",
                    "manage-users",
                    "query-realms"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "72a9bdb1-0d7d-4948-8e8b-1abbab7101d9",
              "attributes": {}
            },
            {
              "id": "30752ca0-52f4-4ed7-af49-0de4ea0d18a0",
              "name": "view-authorization",
              "description": "${role_view-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "72a9bdb1-0d7d-4948-8e8b-1abbab7101d9",
              "attributes": {}
            },
            {
              "id": "b2787069-69f0-4407-9a12-72d635cb84a7",
              "name": "query-users",
              "description": "${role_query-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "72a9bdb1-0d7d-4948-8e8b-1abbab7101d9",
              "attributes": {}
            },
            {
              "id": "6703adfb-9ef2-4373-b788-f425d3ab8eb7",
              "name": "view-clients",
              "description": "${role_view-clients}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "query-clients"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "72a9bdb1-0d7d-4948-8e8b-1abbab7101d9",
              "attributes": {}
            },
            {
              "id": "4e415a1e-9e48-4922-a68f-d3e5e2db8235",
              "name": "view-realm",
              "description": "${role_view-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "72a9bdb1-0d7d-4948-8e8b-1abbab7101d9",
              "attributes": {}
            },
            {
              "id": "102f7927-f637-4ffa-9e2a-2170dffa80d4",
              "name": "manage-realm",
              "description": "${role_manage-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "72a9bdb1-0d7d-4948-8e8b-1abbab7101d9",
              "attributes": {}
            },
            {
              "id": "9352d984-4d35-44b0-9bec-7493f02beb03",
              "name": "query-clients",
              "description": "${role_query-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "72a9bdb1-0d7d-4948-8e8b-1abbab7101d9",
              "attributes": {}
            },
            {
              "id": "d6f9650d-f4d4-441e-be54-a091b00d5a05",
              "name": "query-groups",
              "description": "${role_query-groups}",
              "composite": false,
              "clientRole": true,
              "containerId": "72a9bdb1-0d7d-4948-8e8b-1abbab7101d9",
              "attributes": {}
            },
            {
              "id": "34ee1004-a446-4262-812e-acbec6d7156d",
              "name": "view-users",
              "description": "${role_view-users}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "query-groups",
                    "query-users"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "72a9bdb1-0d7d-4948-8e8b-1abbab7101d9",
              "attributes": {}
            },
            {
              "id": "9276a6ab-6587-4fef-8877-fceb3d075f03",
              "name": "manage-events",
              "description": "${role_manage-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "72a9bdb1-0d7d-4948-8e8b-1abbab7101d9",
              "attributes": {}
            },
            {
              "id": "bc04d202-30b1-4548-af44-0378c4cfca8d",
              "name": "view-events",
              "description": "${role_view-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "72a9bdb1-0d7d-4948-8e8b-1abbab7101d9",
              "attributes": {}
            },
            {
              "id": "ed15d32e-a663-4de4-a546-615e0e3119dd",
              "name": "manage-users",
              "description": "${role_manage-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "72a9bdb1-0d7d-4948-8e8b-1abbab7101d9",
              "attributes": {}
            },
            {
              "id": "22cb1aff-298a-4839-9bd9-358682cbbdd5",
              "name": "query-realms",
              "description": "${role_query-realms}",
              "composite": false,
              "clientRole": true,
              "containerId": "72a9bdb1-0d7d-4948-8e8b-1abbab7101d9",
              "attributes": {}
            }
          ],
          "security-admin-console": [],
          "admin-cli": [],
          "account-console": [],
          "broker": [
            {
              "id": "e7e25c1e-b428-4fec-8e9c-1b0f8761baf8",
              "name": "read-token",
              "description": "${role_read-token}",
              "composite": false,
              "clientRole": true,
              "containerId": "ecd7a389-5868-496b-b3e4-bbd1da991429",
              "attributes": {}
            }
          ],
          "aparcamiento-client": [
            {
              "id": "e33bb430-c606-496d-8a7d-f34e2871e278",
              "name": "uma_protection",
              "composite": false,
              "clientRole": true,
              "containerId": "5056728c-04e0-4654-90cb-6e4d684d4ccf",
              "attributes": {}
            }
          ],
          "servicio-client": [
            {
              "id": "c442c375-be3c-4eaa-bbd2-8ef6b5ea2656",
              "name": "uma_protection",
              "composite": false,
              "clientRole": true,
              "containerId": "dd12da67-8f2b-4144-81c1-28526269a3ef",
              "attributes": {}
            }
          ],
          "account": [
            {
              "id": "f8a3d13f-1c31-4d40-bd7d-49ec660a2e1e",
              "name": "view-profile",
              "description": "${role_view-profile}",
              "composite": false,
              "clientRole": true,
              "containerId": "27b151d2-446f-4a71-8a77-a3495b088599",
              "attributes": {}
            },
            {
              "id": "0b8d13b3-842f-4d3e-8801-b929ab4936ea",
              "name": "manage-account",
              "description": "${role_manage-account}",
              "composite": true,
              "composites": {
                "client": {
                  "account": [
                    "manage-account-links"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "27b151d2-446f-4a71-8a77-a3495b088599",
              "attributes": {}
            },
            {
              "id": "6f2e601b-90bd-46ca-9250-56e0da31cf72",
              "name": "manage-account-links",
              "description": "${role_manage-account-links}",
              "composite": false,
              "clientRole": true,
              "containerId": "27b151d2-446f-4a71-8a77-a3495b088599",
              "attributes": {}
            },
            {
              "id": "70bfdd11-122d-475f-8e27-3734c75fbcfd",
              "name": "view-groups",
              "description": "${role_view-groups}",
              "composite": false,
              "clientRole": true,
              "containerId": "27b151d2-446f-4a71-8a77-a3495b088599",
              "attributes": {}
            },
            {
              "id": "e471a4a3-5966-426a-a42f-2fd33ab4a221",
              "name": "delete-account",
              "description": "${role_delete-account}",
              "composite": false,
              "clientRole": true,
              "containerId": "27b151d2-446f-4a71-8a77-a3495b088599",
              "attributes": {}
            },
            {
              "id": "55311ba0-9f98-47fe-b3f5-b2342e92777a",
              "name": "view-consent",
              "description": "${role_view-consent}",
              "composite": false,
              "clientRole": true,
              "containerId": "27b151d2-446f-4a71-8a77-a3495b088599",
              "attributes": {}
            },
            {
              "id": "5ae84e5c-f868-445c-aea7-15ec885d116c",
              "name": "view-applications",
              "description": "${role_view-applications}",
              "composite": false,
              "clientRole": true,
              "containerId": "27b151d2-446f-4a71-8a77-a3495b088599",
              "attributes": {}
            },
            {
              "id": "5dd88ff5-fd7e-44c5-adfa-30c90ea17698",
              "name": "manage-consent",
              "description": "${role_manage-consent}",
              "composite": true,
              "composites": {
                "client": {
                  "account": [
                    "view-consent"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "27b151d2-446f-4a71-8a77-a3495b088599",
              "attributes": {}
            }
          ]
        }
      },
      "groups": [],
      "defaultRole": {
        "id": "41784e0e-ace3-4818-9f3f-4d837b449691",
        "name": "default-roles-final-twcam",
        "description": "${role_default-roles}",
        "composite": true,
        "clientRole": false,
        "containerId": "7bc290b6-8d0f-4807-b699-dfe3872974a3"
      },
      "requiredCredentials": [
        "password"
      ],
      "otpPolicyType": "totp",
      "otpPolicyAlgorithm": "HmacSHA1",
      "otpPolicyInitialCounter": 0,
      "otpPolicyDigits": 6,
      "otpPolicyLookAheadWindow": 1,
      "otpPolicyPeriod": 30,
      "otpPolicyCodeReusable": false,
      "otpSupportedApplications": [
        "totpAppFreeOTPName",
        "totpAppGoogleName",
        "totpAppMicrosoftAuthenticatorName"
      ],
      "localizationTexts": {},
      "webAuthnPolicyRpEntityName": "keycloak",
      "webAuthnPolicySignatureAlgorithms": [
        "ES256",
        "RS256"
      ],
      "webAuthnPolicyRpId": "",
      "webAuthnPolicyAttestationConveyancePreference": "not specified",
      "webAuthnPolicyAuthenticatorAttachment": "not specified",
      "webAuthnPolicyRequireResidentKey": "not specified",
      "webAuthnPolicyUserVerificationRequirement": "not specified",
      "webAuthnPolicyCreateTimeout": 0,
      "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyAcceptableAaguids": [],
      "webAuthnPolicyExtraOrigins": [],
      "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
      "webAuthnPolicyPasswordlessSignatureAlgorithms": [
        "ES256",
        "RS256"
      ],
      "webAuthnPolicyPasswordlessRpId": "",
      "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
      "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
      "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
      "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
      "webAuthnPolicyPasswordlessCreateTimeout": 0,
      "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyPasswordlessAcceptableAaguids": [],
      "webAuthnPolicyPasswordlessExtraOrigins": [],
      "users": [
        {
          "id": "21487d4a-a999-4950-a716-f9bdd2fe7046",
          "username": "service-account-admin-client",
          "emailVerified": false,
          "createdTimestamp": 1749074266148,
          "enabled": true,
          "totp": false,
          "serviceAccountClientId": "admin-client",
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": [
            "default-roles-final-twcam"
          ],
          "clientRoles": {
            "admin-client": [
              "uma_protection"
            ]
          },
          "notBefore": 0,
          "groups": []
        },
        {
          "id": "b1ccdc82-a9e2-4b06-b464-f865de44daf5",
          "username": "service-account-aparcamiento-client",
          "emailVerified": false,
          "createdTimestamp": 1749074708415,
          "enabled": true,
          "totp": false,
          "serviceAccountClientId": "aparcamiento-client",
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": [
            "default-roles-final-twcam"
          ],
          "clientRoles": {
            "aparcamiento-client": [
              "uma_protection"
            ]
          },
          "notBefore": 0,
          "groups": []
        },
        {
          "id": "fdd77b45-268f-4d49-8a0c-814933a52267",
          "username": "service-account-estacion-client",
          "emailVerified": false,
          "createdTimestamp": 1749074647119,
          "enabled": true,
          "totp": false,
          "serviceAccountClientId": "estacion-client",
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": [
            "default-roles-final-twcam"
          ],
          "clientRoles": {
            "estacion-client": [
              "uma_protection"
            ]
          },
          "notBefore": 0,
          "groups": []
        },
        {
          "id": "baf63066-b05d-472c-8b80-c2bd6326e264",
          "username": "service-account-servicio-client",
          "emailVerified": false,
          "createdTimestamp": 1749074572121,
          "enabled": true,
          "totp": false,
          "serviceAccountClientId": "servicio-client",
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": [
            "default-roles-final-twcam"
          ],
          "clientRoles": {
            "servicio-client": [
              "uma_protection"
            ]
          },
          "notBefore": 0,
          "groups": []
        }
      ],
      "scopeMappings": [
        {
          "clientScope": "offline_access",
          "roles": [
            "offline_access"
          ]
        }
      ],
      "clientScopeMappings": {
        "account": [
          {
            "client": "account-console",
            "roles": [
              "manage-account",
              "view-groups"
            ]
          }
        ]
      },
      "clients": [
        {
          "id": "27b151d2-446f-4a71-8a77-a3495b088599",
          "clientId": "account",
          "name": "${client_account}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/final-twcam/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "/realms/final-twcam/account/*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "organization",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "1ab12489-6c01-4656-8f2e-1b1aba30fbc5",
          "clientId": "account-console",
          "name": "${client_account-console}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/final-twcam/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "/realms/final-twcam/account/*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "post.logout.redirect.uris": "+",
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "6550b218-82ca-4626-a704-e760a2bd9270",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {}
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "organization",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "c04de51d-0c8a-4af5-bfcb-6a5e04facb63",
          "clientId": "admin-cli",
          "name": "${client_admin-cli}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "client.use.lightweight.access.token.enabled": "true"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "organization",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "9a11796b-6aba-45e4-bdb5-e865bae0f8d5",
          "clientId": "admin-client",
          "name": "Admin Client",
          "description": "",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [
            "/*"
          ],
          "webOrigins": [
            "/*"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": true,
          "authorizationServicesEnabled": true,
          "publicClient": false,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "access.token.lifespan": "31536000",
            "request.object.signature.alg": "any",
            "frontchannel.logout.session.required": "true",
            "oauth2.device.authorization.grant.enabled": "false",
            "use.jwks.url": "false",
            "backchannel.logout.revoke.offline.tokens": "false",
            "use.refresh.tokens": "true",
            "realm_client": "false",
            "oidc.ciba.grant.enabled": "false",
            "backchannel.logout.session.required": "true",
            "client_credentials.use_refresh_token": "false",
            "client.offline.session.idle.timeout": "31536000",
            "require.pushed.authorization.requests": "false",
            "request.object.encryption.enc": "any",
            "client.session.max.lifespan": "31536000",
            "client.session.idle.timeout": "31536000",
            "client.secret.creation.time": "1749074266",
            "request.object.encryption.alg": "any",
            "client.introspection.response.allow.jwt.claim.enabled": "false",
            "standard.token.exchange.enabled": "false",
            "client.use.lightweight.access.token.enabled": "false",
            "request.object.required": "not required",
            "access.token.header.type.rfc9068": "false",
            "tls.client.certificate.bound.access.tokens": "false",
            "acr.loa.map": "{}",
            "display.on.consent.screen": "false",
            "token.response.type.bearer.lower-case": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [
            "web-origins",
            "service_account",
            "acr",
            "aud_access_tokens",
            "roles",
            "profile",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "organization",
            "offline_access",
            "microprofile-jwt"
          ],
          "authorizationSettings": {
            "allowRemoteResourceManagement": true,
            "policyEnforcementMode": "ENFORCING",
            "resources": [
              {
                "name": "Default Resource",
                "type": "urn:admin-client:resources:default",
                "ownerManagedAccess": false,
                "attributes": {},
                "uris": [
                  "/*"
                ]
              }
            ],
            "policies": [
              {
                "name": "Default Permission",
                "description": "A permission that applies to the default resource type",
                "type": "resource",
                "logic": "POSITIVE",
                "decisionStrategy": "UNANIMOUS",
                "config": {
                  "defaultResourceType": "urn:admin-client:resources:default"
                }
              }
            ],
            "scopes": [],
            "decisionStrategy": "UNANIMOUS"
          }
        },
        {
          "id": "5056728c-04e0-4654-90cb-6e4d684d4ccf",
          "clientId": "aparcamiento-client",
          "name": "Aparcamiento Client",
          "description": "",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [
            "/*"
          ],
          "webOrigins": [
            "/*"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": true,
          "authorizationServicesEnabled": true,
          "publicClient": false,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "access.token.lifespan": "31536000",
            "request.object.signature.alg": "any",
            "frontchannel.logout.session.required": "true",
            "oauth2.device.authorization.grant.enabled": "false",
            "backchannel.logout.revoke.offline.tokens": "false",
            "use.refresh.tokens": "true",
            "realm_client": "false",
            "oidc.ciba.grant.enabled": "false",
            "backchannel.logout.session.required": "true",
            "client_credentials.use_refresh_token": "false",
            "client.offline.session.idle.timeout": "31276800",
            "require.pushed.authorization.requests": "false",
            "request.object.encryption.enc": "any",
            "client.session.max.lifespan": "31536000",
            "client.session.idle.timeout": "31536000",
            "client.secret.creation.time": "1749074708",
            "request.object.encryption.alg": "any",
            "client.introspection.response.allow.jwt.claim.enabled": "false",
            "standard.token.exchange.enabled": "false",
            "client.use.lightweight.access.token.enabled": "false",
            "request.object.required": "not required",
            "access.token.header.type.rfc9068": "false",
            "tls.client.certificate.bound.access.tokens": "false",
            "acr.loa.map": "{}",
            "display.on.consent.screen": "false",
            "token.response.type.bearer.lower-case": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [
            "web-origins",
            "service_account",
            "acr",
            "aud_access_tokens",
            "roles",
            "profile",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "organization",
            "offline_access",
            "microprofile-jwt"
          ],
          "authorizationSettings": {
            "allowRemoteResourceManagement": true,
            "policyEnforcementMode": "ENFORCING",
            "resources": [
              {
                "name": "Default Resource",
                "type": "urn:aparcamiento-client:resources:default",
                "ownerManagedAccess": false,
                "attributes": {},
                "uris": [
                  "/*"
                ]
              }
            ],
            "policies": [
              {
                "name": "Default Permission",
                "description": "A permission that applies to the default resource type",
                "type": "resource",
                "logic": "POSITIVE",
                "decisionStrategy": "UNANIMOUS",
                "config": {
                  "defaultResourceType": "urn:aparcamiento-client:resources:default"
                }
              }
            ],
            "scopes": [],
            "decisionStrategy": "UNANIMOUS"
          }
        },
        {
          "id": "ecd7a389-5868-496b-b3e4-bbd1da991429",
          "clientId": "broker",
          "name": "${client_broker}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": true,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "true"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "organization",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "2d776362-05d6-4b6f-bbba-d6c16e6d68b8",
          "clientId": "estacion-client",
          "name": "Estación Client",
          "description": "",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [
            "/*"
          ],
          "webOrigins": [
            "/*"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": true,
          "authorizationServicesEnabled": true,
          "publicClient": false,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "access.token.lifespan": "31536000",
            "request.object.signature.alg": "any",
            "frontchannel.logout.session.required": "true",
            "oauth2.device.authorization.grant.enabled": "false",
            "backchannel.logout.revoke.offline.tokens": "false",
            "use.refresh.tokens": "true",
            "realm_client": "false",
            "oidc.ciba.grant.enabled": "false",
            "backchannel.logout.session.required": "true",
            "client_credentials.use_refresh_token": "false",
            "client.offline.session.idle.timeout": "31363200",
            "require.pushed.authorization.requests": "false",
            "request.object.encryption.enc": "any",
            "client.session.max.lifespan": "31536000",
            "client.session.idle.timeout": "31536000",
            "client.secret.creation.time": "1749074647",
            "request.object.encryption.alg": "any",
            "client.introspection.response.allow.jwt.claim.enabled": "false",
            "standard.token.exchange.enabled": "false",
            "client.use.lightweight.access.token.enabled": "false",
            "request.object.required": "not required",
            "access.token.header.type.rfc9068": "false",
            "tls.client.certificate.bound.access.tokens": "false",
            "acr.loa.map": "{}",
            "display.on.consent.screen": "false",
            "token.response.type.bearer.lower-case": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [
            "web-origins",
            "service_account",
            "acr",
            "aud_access_tokens",
            "roles",
            "profile",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "organization",
            "offline_access",
            "microprofile-jwt"
          ],
          "authorizationSettings": {
            "allowRemoteResourceManagement": true,
            "policyEnforcementMode": "ENFORCING",
            "resources": [
              {
                "name": "Default Resource",
                "type": "urn:estacion-client:resources:default",
                "ownerManagedAccess": false,
                "attributes": {},
                "uris": [
                  "/*"
                ]
              }
            ],
            "policies": [
              {
                "name": "Default Permission",
                "description": "A permission that applies to the default resource type",
                "type": "resource",
                "logic": "POSITIVE",
                "decisionStrategy": "UNANIMOUS",
                "config": {
                  "defaultResourceType": "urn:estacion-client:resources:default"
                }
              }
            ],
            "scopes": [],
            "decisionStrategy": "UNANIMOUS"
          }
        },
        {
          "id": "72a9bdb1-0d7d-4948-8e8b-1abbab7101d9",
          "clientId": "realm-management",
          "name": "${client_realm-management}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": true,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "true"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "organization",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "4b5f8a5f-9569-4a4c-b34c-003542bdfb3d",
          "clientId": "security-admin-console",
          "name": "${client_security-admin-console}",
          "rootUrl": "${authAdminUrl}",
          "baseUrl": "/admin/final-twcam/console/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "/admin/final-twcam/console/*"
          ],
          "webOrigins": [
            "+"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "client.use.lightweight.access.token.enabled": "true",
            "post.logout.redirect.uris": "+",
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "74545468-fb68-4e80-a440-ada90d8233f1",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "organization",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "dd12da67-8f2b-4144-81c1-28526269a3ef",
          "clientId": "servicio-client",
          "name": "Servicio Client",
          "description": "",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [
            "/*"
          ],
          "webOrigins": [
            "/*"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": true,
          "authorizationServicesEnabled": true,
          "publicClient": false,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "access.token.lifespan": "31536000",
            "request.object.signature.alg": "any",
            "frontchannel.logout.session.required": "true",
            "oauth2.device.authorization.grant.enabled": "false",
            "backchannel.logout.revoke.offline.tokens": "false",
            "use.refresh.tokens": "true",
            "realm_client": "false",
            "oidc.ciba.grant.enabled": "false",
            "backchannel.logout.session.required": "true",
            "client_credentials.use_refresh_token": "false",
            "client.offline.session.idle.timeout": "31536000",
            "require.pushed.authorization.requests": "false",
            "request.object.encryption.enc": "any",
            "client.session.max.lifespan": "31536000",
            "client.session.idle.timeout": "31536000",
            "client.secret.creation.time": "1749074572",
            "request.object.encryption.alg": "any",
            "client.introspection.response.allow.jwt.claim.enabled": "false",
            "standard.token.exchange.enabled": "false",
            "client.use.lightweight.access.token.enabled": "false",
            "request.object.required": "not required",
            "access.token.header.type.rfc9068": "false",
            "tls.client.certificate.bound.access.tokens": "false",
            "acr.loa.map": "{}",
            "display.on.consent.screen": "false",
            "token.response.type.bearer.lower-case": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [
            "web-origins",
            "service_account",
            "acr",
            "aud_access_tokens",
            "roles",
            "profile",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "organization",
            "offline_access",
            "microprofile-jwt"
          ],
          "authorizationSettings": {
            "allowRemoteResourceManagement": true,
            "policyEnforcementMode": "ENFORCING",
            "resources": [
              {
                "name": "Default Resource",
                "type": "urn:servicio-client:resources:default",
                "ownerManagedAccess": false,
                "attributes": {},
                "uris": [
                  "/*"
                ]
              }
            ],
            "policies": [
              {
                "name": "Default Permission",
                "description": "A permission that applies to the default resource type",
                "type": "resource",
                "logic": "POSITIVE",
                "decisionStrategy": "UNANIMOUS",
                "config": {
                  "defaultResourceType": "urn:servicio-client:resources:default"
                }
              }
            ],
            "scopes": [],
            "decisionStrategy": "UNANIMOUS"
          }
        }
      ],
      "clientScopes": [
        {
          "id": "b83af2e6-0641-4bd6-bb88-9063da8367a5",
          "name": "role_list",
          "description": "SAML role list",
          "protocol": "saml",
          "attributes": {
            "consent.screen.text": "${samlRoleListScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "58088bfc-0f7d-474e-a29e-c745d274e96c",
              "name": "role list",
              "protocol": "saml",
              "protocolMapper": "saml-role-list-mapper",
              "consentRequired": false,
              "config": {
                "single": "false",
                "attribute.nameformat": "Basic",
                "attribute.name": "Role"
              }
            }
          ]
        },
        {
          "id": "c6ce6410-8e5f-4adb-9c46-644497721d30",
          "name": "acr",
          "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "c330152f-ae64-465c-a2ed-b9b4eccb89a1",
              "name": "acr loa level",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-acr-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "2ecab209-560e-4acd-b899-454838411260",
          "name": "organization",
          "description": "Additional claims about the organization a subject belongs to",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "consent.screen.text": "${organizationScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "a6574b42-3a16-4feb-b166-b7984f7cb06a",
              "name": "organization",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-organization-membership-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "organization",
                "jsonType.label": "String",
                "multivalued": "true"
              }
            }
          ]
        },
        {
          "id": "022b9149-3b80-47a6-bfb7-b69edc3baabf",
          "name": "offline_access",
          "description": "OpenID Connect built-in scope: offline_access",
          "protocol": "openid-connect",
          "attributes": {
            "consent.screen.text": "${offlineAccessScopeConsentText}",
            "display.on.consent.screen": "true"
          }
        },
        {
          "id": "81484133-6bea-4236-a445-f6b142f28a0c",
          "name": "basic",
          "description": "OpenID Connect scope for add all basic claims to the token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "50f9649b-f5f3-493f-94b9-f8532dba0f79",
              "name": "auth_time",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "AUTH_TIME",
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "auth_time",
                "jsonType.label": "long"
              }
            },
            {
              "id": "614b5905-4fd1-48c1-8d81-1b4a5ca77175",
              "name": "sub",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-sub-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "09a5fab5-b695-47fa-8921-4d0142a2a692",
          "name": "saml_organization",
          "description": "Organization Membership",
          "protocol": "saml",
          "attributes": {
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "e05c59b5-b526-4046-ad1c-4ef6a1cac89c",
              "name": "organization",
              "protocol": "saml",
              "protocolMapper": "saml-organization-membership-mapper",
              "consentRequired": false,
              "config": {}
            }
          ]
        },
        {
          "id": "ad91b0ef-4e3d-4563-ad89-f759a7e69654",
          "name": "email",
          "description": "OpenID Connect built-in scope: email",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "consent.screen.text": "${emailScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "1c174f64-7844-49d5-8dd0-2b0eb41a9730",
              "name": "email verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "emailVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email_verified",
                "jsonType.label": "boolean"
              }
            },
            {
              "id": "73791df7-40b0-4f73-97dc-702511352be4",
              "name": "email",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "email",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "9651347c-5e28-41fa-b5a9-cefc5d3fa9b8",
          "name": "web-origins",
          "description": "OpenID Connect scope for add allowed web origins to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "consent.screen.text": "",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "3a1a446a-8569-456f-9067-9c43daea2408",
              "name": "allowed web origins",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-allowed-origins-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "c4791eda-5994-4bb7-b09b-d4cad867345b",
          "name": "microprofile-jwt",
          "description": "Microprofile - JWT built-in scope",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "13e95aea-536a-488f-8e3a-ceee6b3d4ae2",
              "name": "upn",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "upn",
                "jsonType.label": "String"
              }
            },
            {
              "id": "473566fb-a1f4-4d34-80df-171da35c9113",
              "name": "groups",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "multivalued": "true",
                "user.attribute": "foo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "groups",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "07ec974d-6060-4696-b4b9-6af49e47b8fc",
          "name": "phone",
          "description": "OpenID Connect built-in scope: phone",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "consent.screen.text": "${phoneScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "ba63c7aa-2302-4a25-957b-97eec40a773b",
              "name": "phone number verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumberVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number_verified",
                "jsonType.label": "boolean"
              }
            },
            {
              "id": "aa92ad4b-079f-4f29-9566-e61873ebb5e8",
              "name": "phone number",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumber",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "82f65938-3f5b-4f55-9dd6-e4d5c6445679",
          "name": "roles",
          "description": "OpenID Connect scope for add user roles to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "consent.screen.text": "${rolesScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "ccaeb12f-49cd-476a-b9de-b4683a8ee250",
              "name": "client roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-client-role-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "foo",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "resource_access.${client_id}.roles",
                "jsonType.label": "String",
                "multivalued": "true"
              }
            },
            {
              "id": "7d43fdd9-c209-4cd3-95eb-b55e0ecd77fa",
              "name": "realm roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "foo",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "realm_access.roles",
                "jsonType.label": "String",
                "multivalued": "true"
              }
            },
            {
              "id": "2d7b71ff-6404-4203-b691-60d783f89361",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "86673587-4743-4d11-b89d-48764a43d7ba",
          "name": "address",
          "description": "OpenID Connect built-in scope: address",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "consent.screen.text": "${addressScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "d9708a5f-e2d4-42d0-9ba2-647506b1aeaf",
              "name": "address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-address-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute.formatted": "formatted",
                "user.attribute.country": "country",
                "introspection.token.claim": "true",
                "user.attribute.postal_code": "postal_code",
                "userinfo.token.claim": "true",
                "user.attribute.street": "street",
                "id.token.claim": "true",
                "user.attribute.region": "region",
                "access.token.claim": "true",
                "user.attribute.locality": "locality"
              }
            }
          ]
        },
        {
          "id": "df8afa7c-17bd-422c-8e31-79750a381039",
          "name": "service_account",
          "description": "Specific scope for a client enabled for service accounts",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "834e233c-d83a-4bba-8061-e1240d55ff5b",
              "name": "Client IP Address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientAddress",
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientAddress",
                "jsonType.label": "String"
              }
            },
            {
              "id": "edd2879c-6116-4dba-bf2f-2b9258eac299",
              "name": "Client ID",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "client_id",
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "client_id",
                "jsonType.label": "String"
              }
            },
            {
              "id": "b4f5f6b3-2693-4ab9-8a06-2f3e18070153",
              "name": "Client Host",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientHost",
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientHost",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "edfbc751-e76a-4d61-bfd1-861b96053d93",
          "name": "profile",
          "description": "OpenID Connect built-in scope: profile",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "consent.screen.text": "${profileScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "11ee3964-4e88-4f10-833a-746b78d5e7a7",
              "name": "updated at",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "updatedAt",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "updated_at",
                "jsonType.label": "long"
              }
            },
            {
              "id": "e6cb9adf-7095-4838-99ee-f1d7ac99d106",
              "name": "gender",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "gender",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "gender",
                "jsonType.label": "String"
              }
            },
            {
              "id": "0acd1344-2e60-49e3-aac1-7961b1d64916",
              "name": "nickname",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "nickname",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "nickname",
                "jsonType.label": "String"
              }
            },
            {
              "id": "c14eafd2-4f4a-44a9-b128-1ae9b218624e",
              "name": "picture",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "picture",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "picture",
                "jsonType.label": "String"
              }
            },
            {
              "id": "2336aab4-a468-4340-8f84-5ccec9add47c",
              "name": "given name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "firstName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "given_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "80be4bd3-3ddd-45b3-8e0b-615c8c5b0571",
              "name": "middle name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "middleName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "middle_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "e395bef3-0fb9-486d-a442-3c3a35ce06d9",
              "name": "profile",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "profile",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "profile",
                "jsonType.label": "String"
              }
            },
            {
              "id": "98b7be2c-7c4c-4279-9987-ad578c1a9f67",
              "name": "family name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "lastName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "family_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "f7cefffb-92c5-420f-a7d1-186d13408959",
              "name": "website",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "website",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "website",
                "jsonType.label": "String"
              }
            },
            {
              "id": "f801f31c-5dff-4c89-9a4f-1c43005a12bf",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            },
            {
              "id": "2971e6f2-bea6-4241-92a4-ad300beb4b9a",
              "name": "username",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "preferred_username",
                "jsonType.label": "String"
              }
            },
            {
              "id": "4ad402b3-fbf5-4b56-ad2d-e855c913c527",
              "name": "birthdate",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "birthdate",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "birthdate",
                "jsonType.label": "String"
              }
            },
            {
              "id": "9af28029-c5ca-484b-a693-8e2e5fc429b0",
              "name": "zoneinfo",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "zoneinfo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "zoneinfo",
                "jsonType.label": "String"
              }
            },
            {
              "id": "95eef2b8-1a9c-46ec-b4dc-44fb503921ff",
              "name": "full name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-full-name-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "7159ffc6-ac70-47aa-9141-5c072f6bd7c2",
          "name": "aud_access_tokens",
          "description": "",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "true",
            "gui.order": "",
            "consent.screen.text": ""
          },
          "protocolMappers": [
            {
              "id": "a246031a-6ae9-4f29-90a4-647087653d65",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            }
          ]
        }
      ],
      "defaultDefaultClientScopes": [
        "role_list",
        "saml_organization",
        "profile",
        "email",
        "roles",
        "web-origins",
        "acr",
        "basic"
      ],
      "defaultOptionalClientScopes": [
        "offline_access",
        "address",
        "phone",
        "microprofile-jwt",
        "organization"
      ],
      "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "referrerPolicy": "no-referrer",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
      },
      "smtpServer": {},
      "eventsEnabled": false,
      "eventsListeners": [
        "jboss-logging"
      ],
      "enabledEventTypes": [],
      "adminEventsEnabled": false,
      "adminEventsDetailsEnabled": false,
      "identityProviders": [],
      "identityProviderMappers": [],
      "components": {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
          {
            "id": "852dfd75-0c98-48a2-a7d7-62af4416cde0",
            "name": "Trusted Hosts",
            "providerId": "trusted-hosts",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "host-sending-registration-request-must-match": [
                "true"
              ],
              "client-uris-must-match": [
                "true"
              ]
            }
          },
          {
            "id": "f27107a8-dd37-4755-8a92-f9178091e029",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "oidc-usermodel-property-mapper",
                "saml-user-property-mapper",
                "oidc-sha256-pairwise-sub-mapper",
                "saml-role-list-mapper",
                "oidc-usermodel-attribute-mapper",
                "oidc-full-name-mapper",
                "saml-user-attribute-mapper",
                "oidc-address-mapper"
              ]
            }
          },
          {
            "id": "b42ef697-7256-4c3f-8edd-cd67be40fa9a",
            "name": "Full Scope Disabled",
            "providerId": "scope",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "d2d7f897-b282-441a-a280-6ba7085aaafb",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "saml-user-property-mapper",
                "oidc-full-name-mapper",
                "oidc-usermodel-attribute-mapper",
                "saml-role-list-mapper",
                "oidc-usermodel-property-mapper",
                "oidc-sha256-pairwise-sub-mapper",
                "oidc-address-mapper",
                "saml-user-attribute-mapper"
              ]
            }
          },
          {
            "id": "894529b2-0d9e-49a9-9800-fb7c3f9d56b3",
            "name": "Max Clients Limit",
            "providerId": "max-clients",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "max-clients": [
                "200"
              ]
            }
          },
          {
            "id": "3701ebfa-2cee-4421-86e9-f41ef59b454e",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allow-default-scopes": [
                "true"
              ]
            }
          },
          {
            "id": "250acd1b-9bd2-491c-8031-4a3148597cda",
            "name": "Consent Required",
            "providerId": "consent-required",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "c2bb3c51-091a-4c2d-967d-28c3f4c27a36",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allow-default-scopes": [
                "true"
              ]
            }
          }
        ],
        "org.keycloak.keys.KeyProvider": [
          {
            "id": "12fdbf26-27b4-4a97-bac5-66db38cb9e6b",
            "name": "rsa-generated",
            "providerId": "rsa-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ]
            }
          },
          {
            "id": "4c153f40-8841-4f38-be56-df38b37184ff",
            "name": "aes-generated",
            "providerId": "aes-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ]
            }
          },
          {
            "id": "22cf44c3-cd41-40a5-bfd4-7a742d5eda47",
            "name": "hmac-generated-hs512",
            "providerId": "hmac-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ],
              "algorithm": [
                "HS512"
              ]
            }
          },
          {
            "id": "220e7dda-c49e-41a1-ba5b-b0a5790d7e19",
            "name": "rsa-enc-generated",
            "providerId": "rsa-enc-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ],
              "algorithm": [
                "RSA-OAEP"
              ]
            }
          }
        ]
      },
      "internationalizationEnabled": false,
      "supportedLocales": [],
      "authenticationFlows": [
        {
          "id": "028430bd-ac67-479d-b187-d7f412747215",
          "alias": "Account verification options",
          "description": "Method with which to verity the existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-email-verification",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Verify Existing Account by Re-authentication",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "cdbf3585-d7b9-4fe0-9193-7cbe61eb66eb",
          "alias": "Browser - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "b9e00e88-f4f4-4a33-a3d8-52f4b5594571",
          "alias": "Browser - Conditional Organization",
          "description": "Flow to determine if the organization identity-first login is to be used",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "organization",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "500ef71e-bff8-42c7-8cb9-d549e53d34ad",
          "alias": "Direct Grant - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "direct-grant-validate-otp",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "bbe824ad-1fd8-403b-bf1e-33f813b1b5b9",
          "alias": "First Broker Login - Conditional Organization",
          "description": "Flow to determine if the authenticator that adds organization members is to be used",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "idp-add-organization-member",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "1a690970-9675-4db8-a41b-445f6c98c432",
          "alias": "First broker login - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "cbad19b0-032b-4bf0-9be1-603f4b4c8014",
          "alias": "Handle Existing Account",
          "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-confirm-link",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Account verification options",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "a84f0917-7514-4839-b322-8d6acb476355",
          "alias": "Organization",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 10,
              "autheticatorFlow": true,
              "flowAlias": "Browser - Conditional Organization",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "7fad66d1-88e9-4112-8c02-121b4d4ec257",
          "alias": "Reset - Conditional OTP",
          "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-otp",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "2646dc9a-78fd-40f6-b15a-74c089e3ea97",
          "alias": "User creation or linking",
          "description": "Flow for the existing/non-existing user alternatives",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "create unique user config",
              "authenticator": "idp-create-user-if-unique",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Handle Existing Account",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "018b9a58-c5f4-4ab5-9234-0bbda144ff98",
          "alias": "Verify Existing Account by Re-authentication",
          "description": "Reauthentication of existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "First broker login - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "aee4eb93-8752-48de-9f95-67b3469e4078",
          "alias": "browser",
          "description": "Browser based authentication",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-cookie",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-spnego",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "identity-provider-redirector",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 25,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 26,
              "autheticatorFlow": true,
              "flowAlias": "Organization",
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "autheticatorFlow": true,
              "flowAlias": "forms",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "cd24038e-dd12-43f9-b1e9-18ad77d18e90",
          "alias": "clients",
          "description": "Base authentication for clients",
          "providerId": "client-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "client-secret",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-jwt",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-secret-jwt",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-x509",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 40,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "f4ba37c4-e427-4b18-ac38-c1ccf5cc5407",
          "alias": "direct grant",
          "description": "OpenID Connect Resource Owner Grant",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "direct-grant-validate-username",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "direct-grant-validate-password",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 30,
              "autheticatorFlow": true,
              "flowAlias": "Direct Grant - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "79d99bf3-a6c0-40a4-b880-84fa28bbb3be",
          "alias": "docker auth",
          "description": "Used by Docker clients to authenticate against the IDP",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "docker-http-basic-authenticator",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "21e9dd38-ba39-4839-bee7-34ce32039239",
          "alias": "first broker login",
          "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "review profile config",
              "authenticator": "idp-review-profile",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "User creation or linking",
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 50,
              "autheticatorFlow": true,
              "flowAlias": "First Broker Login - Conditional Organization",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "fb2db594-1eac-49bc-8ae8-582db69e270e",
          "alias": "forms",
          "description": "Username, password, otp and other auth forms.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Browser - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "61f17095-1c93-4fec-9a55-5f8113d1c80b",
          "alias": "registration",
          "description": "Registration flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-page-form",
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": true,
              "flowAlias": "registration form",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "f9583566-38ca-4d90-b351-b7c5acbcdb8b",
          "alias": "registration form",
          "description": "Registration form",
          "providerId": "form-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-user-creation",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-password-action",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 50,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-recaptcha-action",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 60,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-terms-and-conditions",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 70,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "b955e3a7-942a-4c64-91c2-4374b778a111",
          "alias": "reset credentials",
          "description": "Reset credentials for a user if they forgot their password or something",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "reset-credentials-choose-user",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-credential-email",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-password",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 30,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 40,
              "autheticatorFlow": true,
              "flowAlias": "Reset - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "80877a10-ea69-47c5-b412-7f2369c4e788",
          "alias": "saml ecp",
          "description": "SAML ECP Profile Authentication Flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "http-basic-authenticator",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        }
      ],
      "authenticatorConfig": [
        {
          "id": "f6ef108a-9f99-4a5f-9e60-1d4bda453cef",
          "alias": "create unique user config",
          "config": {
            "require.password.update.after.registration": "false"
          }
        },
        {
          "id": "8afbbc17-4e4c-4898-9a75-4d9a871811f2",
          "alias": "review profile config",
          "config": {
            "update.profile.on.first.login": "missing"
          }
        }
      ],
      "requiredActions": [
        {
          "alias": "CONFIGURE_TOTP",
          "name": "Configure OTP",
          "providerId": "CONFIGURE_TOTP",
          "enabled": true,
          "defaultAction": false,
          "priority": 10,
          "config": {}
        },
        {
          "alias": "TERMS_AND_CONDITIONS",
          "name": "Terms and Conditions",
          "providerId": "TERMS_AND_CONDITIONS",
          "enabled": false,
          "defaultAction": false,
          "priority": 20,
          "config": {}
        },
        {
          "alias": "UPDATE_PASSWORD",
          "name": "Update Password",
          "providerId": "UPDATE_PASSWORD",
          "enabled": true,
          "defaultAction": false,
          "priority": 30,
          "config": {}
        },
        {
          "alias": "UPDATE_PROFILE",
          "name": "Update Profile",
          "providerId": "UPDATE_PROFILE",
          "enabled": true,
          "defaultAction": false,
          "priority": 40,
          "config": {}
        },
        {
          "alias": "VERIFY_EMAIL",
          "name": "Verify Email",
          "providerId": "VERIFY_EMAIL",
          "enabled": true,
          "defaultAction": false,
          "priority": 50,
          "config": {}
        },
        {
          "alias": "delete_account",
          "name": "Delete Account",
          "providerId": "delete_account",
          "enabled": false,
          "defaultAction": false,
          "priority": 60,
          "config": {}
        },
        {
          "alias": "webauthn-register",
          "name": "Webauthn Register",
          "providerId": "webauthn-register",
          "enabled": true,
          "defaultAction": false,
          "priority": 70,
          "config": {}
        },
        {
          "alias": "webauthn-register-passwordless",
          "name": "Webauthn Register Passwordless",
          "providerId": "webauthn-register-passwordless",
          "enabled": true,
          "defaultAction": false,
          "priority": 80,
          "config": {}
        },
        {
          "alias": "VERIFY_PROFILE",
          "name": "Verify Profile",
          "providerId": "VERIFY_PROFILE",
          "enabled": true,
          "defaultAction": false,
          "priority": 90,
          "config": {}
        },
        {
          "alias": "delete_credential",
          "name": "Delete Credential",
          "providerId": "delete_credential",
          "enabled": true,
          "defaultAction": false,
          "priority": 100,
          "config": {}
        },
        {
          "alias": "update_user_locale",
          "name": "Update User Locale",
          "providerId": "update_user_locale",
          "enabled": true,
          "defaultAction": false,
          "priority": 1000,
          "config": {}
        }
      ],
      "browserFlow": "browser",
      "registrationFlow": "registration",
      "directGrantFlow": "direct grant",
      "resetCredentialsFlow": "reset credentials",
      "clientAuthenticationFlow": "clients",
      "dockerAuthenticationFlow": "docker auth",
      "firstBrokerLoginFlow": "first broker login",
      "attributes": {
        "cibaBackchannelTokenDeliveryMode": "poll",
        "cibaAuthRequestedUserHint": "login_hint",
        "oauth2DevicePollingInterval": "5",
        "clientOfflineSessionMaxLifespan": "0",
        "clientSessionIdleTimeout": "31536000",
        "actionTokenGeneratedByUserLifespan.verify-email": "",
        "actionTokenGeneratedByUserLifespan.idp-verify-account-via-email": "",
        "clientOfflineSessionIdleTimeout": "0",
        "actionTokenGeneratedByUserLifespan.execute-actions": "",
        "cibaInterval": "5",
        "realmReusableOtpCode": "false",
        "cibaExpiresIn": "120",
        "oauth2DeviceCodeLifespan": "600",
        "parRequestUriLifespan": "60",
        "clientSessionMaxLifespan": "31536000",
        "shortVerificationUri": "",
        "actionTokenGeneratedByUserLifespan.reset-credentials": ""
      },
      "keycloakVersion": "26.2.4",
      "userManagedAccessAllowed": false,
      "organizationsEnabled": false,
      "verifiableCredentialsEnabled": false,
      "adminPermissionsEnabled": false,
      "clientProfiles": {
        "profiles": []
      },
      "clientPolicies": {
        "policies": []
      }
    },